{"version":3,"file":"static/js/413.22509391.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const selectContacts = state => state.contacts.contacts;\r\nconst selectFilter = state => state.filter.filterValue;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectFilteredContacts = createSelector(\r\n  [selectContacts, selectFilter],\r\n  (contacts, filter) => {\r\n    if (!contacts) return;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    );\r\n  }\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleH2 = styled.h2`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: rgb(17, 54, 133);\r\n  margin-bottom: 40px;\r\n\r\n  @media (min-width: 476px) {\r\n    font-size: 38px;\r\n  }\r\n`;\r\n\r\nexport const AddSection = styled.section`\r\n  margin: 70px auto 0;\r\n  @media (min-width: 576px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 576px) {\r\n    width: 450px;\r\n  }\r\n`;\r\nexport const FormLabel = styled.label`\r\n  line-height: 1.8;\r\n  color: rgb(17, 54, 133);\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n`;\r\nexport const FormInput = styled.input`\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  border: 3px solid rgb(240, 139, 8);\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));\r\n  outline: transparent;\r\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:focus,\r\n  &:hover {\r\n    box-shadow: 2px 4px 2px 2px rgb(205, 156, 92);\r\n  }\r\n`;\r\nexport const AddButton = styled.button`\r\n  width: 200px;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  border: 3px solid rgb(17, 54, 133);\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  color: rgb(17, 54, 133);\r\n  background-color: rgb(240, 139, 8);\r\n  margin: 20px auto 0;\r\n  &:hover {\r\n    box-shadow: 2px 4px 6px 2px rgb(17, 54, 133);\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Notiflix from 'notiflix';\r\nimport { addContacts } from 'redux/contacts/operations';\r\nimport { selectContacts } from 'redux/contacts/selectors';\r\n\r\nimport {\r\n  Form,\r\n  FormLabel,\r\n  FormInput,\r\n  AddButton,\r\n  TitleH2,\r\n  AddSection,\r\n} from './ContactForm.styled';\r\n\r\nexport function ContactForm() {\r\n  const contacts = useSelector(selectContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const inputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const createContact = e => {\r\n    e.preventDefault();\r\n    const isExist = contacts.some(\r\n      el => el.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    if (isExist) {\r\n      Notiflix.Notify.failure(`${name} is already in contacts`);\r\n      resetForm();\r\n      return;\r\n    }\r\n    dispatch(addContacts({ name, number }));\r\n\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <AddSection>\r\n      <TitleH2>Add contact</TitleH2>\r\n      <Form onSubmit={createContact}>\r\n        <FormLabel>\r\n          Name\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            placeholder=\"John Smith\"\r\n            onChange={inputChange}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Number\r\n          <FormInput\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            placeholder=\"+380678889900\"\r\n            onChange={inputChange}\r\n          />\r\n        </FormLabel>\r\n        <AddButton type=\"submit\">Add contact</AddButton>\r\n      </Form>\r\n    </AddSection>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterSection = styled.section`\r\n  margin: 70px auto 0;\r\n  @media (min-width: 576px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const TitleH2 = styled.h2`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: rgb(17, 54, 133);\r\n  margin-bottom: 40px;\r\n\r\n  @media (min-width: 476px) {\r\n    font-size: 38px;\r\n  }\r\n`;\r\n\r\nexport const SearchLabel = styled.label`\r\n  line-height: 1.8;\r\n  color: rgb(17, 54, 133);\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  margin-bottom: 40px;\r\n  width: 100%;\r\n  @media (min-width: 576px) {\r\n    width: 450px;\r\n  }\r\n`;\r\nexport const SearchInput = styled.input`\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  border: 3px solid rgb(240, 139, 8);\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));\r\n  outline: transparent;\r\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:focus,\r\n  &:hover {\r\n    box-shadow: 2px 4px 2px 2px rgb(205, 156, 92);\r\n  }\r\n`;\r\n","import { setFilterValue } from 'redux/contacts/filterSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  FilterSection,\r\n  SearchInput,\r\n  SearchLabel,\r\n  TitleH2,\r\n} from './Filter.styled';\r\n\r\nexport const Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <FilterSection>\r\n      <TitleH2>Find contact</TitleH2>\r\n      <SearchLabel>\r\n        Find contacts by name\r\n        <SearchInput\r\n          type=\"text\"\r\n          name=\"name\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n          onChange={e => dispatch(setFilterValue(e.target.value))}\r\n        />\r\n      </SearchLabel>\r\n    </FilterSection>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ListItem = styled.li`\r\n  width: 100%;\r\n  @media (min-width: 520px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const ContactInfo = styled.div`\r\n  flex-basis: 75%;\r\n  max-width: 100%;\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 10px;\r\n  @media (min-width: 520px) {\r\n    margin-bottom: 0;\r\n    gap: 0;\r\n  }\r\n`;\r\n\r\nexport const ContactName = styled.div`\r\n  flex-basis: 60%;\r\n  color: rgb(17, 54, 133);\r\n  font-weight: 500;\r\n  @media (min-width: 520px) {\r\n    font-size: 20px;\r\n    flex-basis: 60%;\r\n  }\r\n`;\r\nexport const ContactNumber = styled.div`\r\n  flex-basis: 40%;\r\n  color: rgb(240, 139, 8);\r\n  text-shadow: 1px 1px 1px rgb(17, 54, 133);\r\n  font-weight: 500;\r\n  @media (min-width: 520px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const DelBtn = styled.button`\r\n  width: 70px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 3px solid rgb(17, 54, 133);\r\n  font-weight: 500;\r\n  color: rgb(17, 54, 133);\r\n  background-color: rgb(240, 139, 8);\r\n  &:hover {\r\n    box-shadow: 2px 4px 6px 2px rgb(17, 54, 133);\r\n  }\r\n  @media (min-width: 520px) {\r\n    font-size: 20px;\r\n    width: 100px;\r\n  }\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { deleteContacts } from 'redux/contacts/operations';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  ListItem,\r\n  DelBtn,\r\n  ContactName,\r\n  ContactNumber,\r\n  ContactInfo,\r\n} from './ContactItem.styled';\r\n\r\nexport const ContactItem = ({ contactInfo }) => {\r\n  const { id, name, number } = contactInfo;\r\n  const dispatch = useDispatch();\r\n  const handleDelete = id => {\r\n    dispatch(deleteContacts(id));\r\n  };\r\n\r\n  return (\r\n    <ListItem>\r\n      <ContactInfo>\r\n        <ContactName>{name}</ContactName>\r\n        <ContactNumber>{number}</ContactNumber>\r\n      </ContactInfo>\r\n\r\n      <DelBtn onClick={() => handleDelete(id)}>Delete</DelBtn>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nContactItem.prototype = {\r\n  contactInfo: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string || PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsSection = styled.section`\r\n  margin: 70px auto 0;\r\n  width: 100%;\r\n  @media (min-width: 576px) {\r\n    max-width: 800px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 30px;\r\n  @media (min-width: 576px) {\r\n    align-items: stretch;\r\n  }\r\n`;\r\n\r\nexport const TitleH2 = styled.h2`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: rgb(17, 54, 133);\r\n  margin-bottom: 70px;\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 38px;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  selectFilteredContacts,\r\n  selectIsLoading,\r\n  selectError,\r\n} from 'redux/contacts/selectors';\r\nimport { useEffect } from 'react';\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { getContacts } from 'redux/contacts/operations';\r\n\r\nimport { ContactItem } from 'components/ContactItem/ContactItem';\r\nimport { ContactsSection, List, TitleH2 } from './ContactList.styled';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nexport const ContactList = () => {\r\n  const { isLoggedIn } = useAuth();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return;\r\n    dispatch(getContacts());\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  const contacts = useSelector(selectFilteredContacts);\r\n\r\n  return (\r\n    <ContactsSection>\r\n      <TitleH2>Contacts</TitleH2>\r\n      {isLoading && <Loader />}\r\n      {error && (\r\n        <p style={{ color: 'red' }}>\r\n          Sorry, an error occurred! Error: {error}. Please try again later!\r\n        </p>\r\n      )}\r\n      <List>\r\n        {contacts.map(contact => {\r\n          return <ContactItem key={contact.id} contactInfo={contact} />;\r\n        })}\r\n      </List>\r\n    </ContactsSection>\r\n  );\r\n};\r\n","import { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\nimport { Container } from 'components/Container/Container.styled';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <Container>\r\n      <>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    </Container>\r\n  );\r\n}\r\nexport default Contacts;\r\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","trim","TitleH2","styled","AddSection","Form","FormLabel","FormInput","AddButton","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","inputChange","e","target","value","resetForm","onSubmit","preventDefault","some","el","Notiflix","addContacts","type","pattern","title","required","placeholder","onChange","FilterSection","SearchLabel","SearchInput","Filter","setFilterValue","ListItem","ContactInfo","ContactName","ContactNumber","DelBtn","ContactItem","contactInfo","id","onClick","deleteContacts","handleDelete","prototype","PropTypes","isRequired","ContactsSection","List","ContactList","isLoggedIn","useAuth","useEffect","getContacts","Loader","style","color","map"],"sourceRoot":""}